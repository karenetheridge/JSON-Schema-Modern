[
    {
        "description": "valid $vocabulary",
        "schema": {
            "$id": "https://mymetaschema",
            "$vocabulary": {
                "https://json-schema.org/draft/2019-09/vocab/core": true,
                "https://foo.com": false
            }
        },
        "tests": [
            {
                "description": "a valid $vocabulary value",
                "data": 1,
                "valid": true
            }
        ]
    },
    {
        "description": "invalid $vocabulary (wrong specification version), but not until we evaluate with this metaschema",
        "schema": {
            "$id": "https://mymetaschema2",
            "$vocabulary": {
                "https://json-schema.org/draft/2020-12/vocab/core": true
            }
        },
        "tests": [
            {
                "description": "invalid $vocabulary (wrong specification version): register this metaschema",
                "data": 1,
                "valid": true
            }
        ]
    },
    {
        "description": "use schema (invalid $vocabulary) as a metaschema",
        "schema": {
            "$id": "https://mychema2",
            "$schema": "https://mymetaschema2"
        },
        "tests": [
            {
                "description": "invalid $vocabulary value: wrong specification version",
                "data": 1,
                "valid": false
            }
        ]
    },
    {
        "description": "invalid $vocabulary (unknown URI), but not until we evaluate with this metaschema",
        "schema": {
            "$id": "https://mymetaschema3",
            "$vocabulary": {
                "https://json-schema.org/draft/2019-09/vocab/core": true,
                "https://foo.com": true
            }
        },
        "tests": [
            {
                "description": "invalid $vocabulary (unknown URI): register this metaschema",
                "data": 1,
                "valid": true
            }
        ]
    },
    {
        "description": "use schema (unknown URI) as a metaschema",
        "schema": {
            "$id": "https://myschema3",
            "$schema": "https://mymetaschema3"
        },
        "tests": [
            {
                "description": "invalid $vocabulary value: unknown URI",
                "data": 1,
                "valid": false
            }
        ]
    }
]
