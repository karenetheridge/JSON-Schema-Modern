# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package List::MoreUtils::XS;
0.000000,0,0.000000,
0.000072,2,0.000036,use 5.008_001;
0.000049,2,0.000024,use strict;
0.000041,2,0.000021,use warnings;
0.000058,2,0.000029,use base ('Exporter');
0.000000,0,0.000000,
0.000116,2,0.000058,use vars qw{$VERSION @ISA @EXPORT @EXPORT_OK %EXPORT_TAGS};
0.000000,0,0.000000,
0.000001,1,0.000001,$VERSION = '0.430';
0.000000,0,0.000000,
0.000000,1,0.000000,@EXPORT    = ();
0.000004,1,0.000004,@EXPORT_OK = qw(any all none notall one
0.000000,0,0.000000,any_u all_u none_u notall_u one_u
0.000000,0,0.000000,reduce_u reduce_0 reduce_1
0.000000,0,0.000000,true false
0.000000,0,0.000000,insert_after insert_after_string
0.000000,0,0.000000,apply indexes slide
0.000000,0,0.000000,after after_incl before before_incl
0.000000,0,0.000000,firstidx lastidx onlyidx
0.000000,0,0.000000,firstval lastval onlyval
0.000000,0,0.000000,firstres lastres onlyres
0.000000,0,0.000000,singleton duplicates frequency occurrences mode
0.000000,0,0.000000,each_array each_arrayref
0.000000,0,0.000000,pairwise natatime slideatatime
0.000000,0,0.000000,arrayify mesh zip6 uniq listcmp
0.000000,0,0.000000,samples minmax minmaxstr part
0.000000,0,0.000000,bsearch bsearchidx binsert bremove lower_bound upper_bound equal_range
0.000000,0,0.000000,qsort);
0.000002,1,0.000002,%EXPORT_TAGS = (all => \@EXPORT_OK);
0.000000,0,0.000000,
0.000000,0,0.000000,# Load the XS at compile-time so that redefinition warnings will be
0.000000,0,0.000000,# thrown correctly if the XS versions of part or indexes loaded
0.000000,0,0.000000,
0.000000,0,0.000000,# PERL_DL_NONLAZY must be false, or any errors in loading will just
0.000000,0,0.000000,# cause the perl code to be tested
0.000001,1,0.000001,local $ENV{PERL_DL_NONLAZY} = 0 if $ENV{PERL_DL_NONLAZY};
0.000000,0,0.000000,
0.000236,2,0.000118,use XSLoader ();
0.001678,1,0.001678,XSLoader::load("List::MoreUtils::XS", "$VERSION");
0.000000,0,0.000000,
0.000000,0,0.000000,=pod
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 NAME
0.000000,0,0.000000,
0.000000,0,0.000000,List::MoreUtils::XS - Provide compiled List::MoreUtils functions
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 SYNOPSIS
0.000000,0,0.000000,
0.000000,0,0.000000,use List::MoreUtils::XS (); # doesn't export anything
0.000000,0,0.000000,use List::MoreUtils ':all'; # required to import functions
0.000000,0,0.000000,
0.000000,0,0.000000,my @procs = get_process_stats->fetchall_array;
0.000000,0,0.000000,# sort by ppid, then pid
0.000000,0,0.000000,qsort { $a->[3] <=> $b->[3] or $a->[2] <=> $b->[2] } @procs;
0.000000,0,0.000000,while( @procs ) {
0.000000,0,0.000000,my $proc = shift @procs;
0.000000,0,0.000000,my @children = equal_range { $_->[3] <=> $proc->[2] } @procs;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,my @left = qw(this is a test);
0.000000,0,0.000000,my @right = qw(this is also a test);
0.000000,0,0.000000,my %rlinfo = listcmp @left, @right;
0.000000,0,0.000000,
0.000000,0,0.000000,# on unsorted
0.000000,0,0.000000,my $i = firstidx { $_ eq 'yeah' } @foo;
0.000000,0,0.000000,# on sorted - always first, but might not be 'yeah'
0.000000,0,0.000000,my $j = lower_bound { $_ cmp 'yeah' } @bar;
0.000000,0,0.000000,# on sorted - any of occurrences, is surely 'yeah'
0.000000,0,0.000000,my $k = bsearchidx { $_ cmp 'yeah' } @bar;
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 DESCRIPTION
0.000000,0,0.000000,
0.000000,0,0.000000,List::MoreUtils::XS is a backend for List::MoreUtils. Even if it's possible
0.000000,0,0.000000,(because of user wishes) to have it practically independent from
0.000000,0,0.000000,L<List::MoreUtils>, it technically depend on C<List::MoreUtils>. Since it's
0.000000,0,0.000000,only a backend, the API is not public and can change without any warning.
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 SEE ALSO
0.000000,0,0.000000,
0.000000,0,0.000000,L<List::Util>, L<List::AllUtils>
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 AUTHOR
0.000000,0,0.000000,
0.000000,0,0.000000,Jens Rehsack E<lt>rehsack AT cpan.orgE<gt>
0.000000,0,0.000000,
0.000000,0,0.000000,Adam Kennedy E<lt>adamk@cpan.orgE<gt>
0.000000,0,0.000000,
0.000000,0,0.000000,Tassilo von Parseval E<lt>tassilo.von.parseval@rwth-aachen.deE<gt>
0.000000,0,0.000000,
0.000000,0,0.000000,=head1 COPYRIGHT AND LICENSE
0.000000,0,0.000000,
0.000000,0,0.000000,Some parts copyright 2011 Aaron Crane.
0.000000,0,0.000000,
0.000000,0,0.000000,Copyright 2004 - 2010 by Tassilo von Parseval
0.000000,0,0.000000,
0.000000,0,0.000000,Copyright 2013 - 2017 by Jens Rehsack
0.000000,0,0.000000,
0.000000,0,0.000000,All code added with 0.417 or later is licensed under the Apache License,
0.000000,0,0.000000,Version 2.0 (the "License"); you may not use this file except in compliance
0.000000,0,0.000000,with the License. You may obtain a copy of the License at
0.000000,0,0.000000,
0.000000,0,0.000000,http://www.apache.org/licenses/LICENSE-2.0
0.000000,0,0.000000,
0.000000,0,0.000000,Unless required by applicable law or agreed to in writing, software
0.000000,0,0.000000,distributed under the License is distributed on an "AS IS" BASIS,
0.000000,0,0.000000,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0.000000,0,0.000000,See the License for the specific language governing permissions and
0.000000,0,0.000000,limitations under the License.
0.000000,0,0.000000,
0.000000,0,0.000000,All code until 0.416 is licensed under the same terms as Perl itself,
0.000000,0,0.000000,either Perl version 5.8.4 or, at your option, any later version of
0.000000,0,0.000000,Perl 5 you may have available.
0.000000,0,0.000000,
0.000000,0,0.000000,=cut
0.000000,0,0.000000,
0.000025,1,0.000025,1;
