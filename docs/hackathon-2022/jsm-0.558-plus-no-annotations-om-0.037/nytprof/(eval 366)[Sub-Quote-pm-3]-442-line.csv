# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,{
0.000001,2,0.000000,my $_UNQUOTED = ${$_[1]->{"\$_UNQUOTED"}};
0.000000,1,0.000000,my $_QUOTED = ${$_[1]->{"\$_QUOTED"}};
0.000000,1,0.000000,my $isa_check_for__5fjson_5fdecoder = ${$_[1]->{"\$isa_check_for__5fjson_5fdecoder"}};
0.000000,1,0.000000,my $default_for__5fjson_5fdecoder = ${$_[1]->{"\$default_for__5fjson_5fdecoder"}};
0.000000,0,0.000000,package JSON::Schema::Modern;
0.000041,2,0.000021,no warnings 'closure';
0.000000,0,0.000000,sub _json_decoder {
0.000000,0,0.000000,($_QUOTED,$_UNQUOTED) if 0;
0.000000,0,0.000000,# BEGIN quote_sub PRELUDE
0.000000,0,0.000000,package Method::Generate::Accessor::_Generated;
0.000000,0,0.000000,BEGIN {
0.000001,1,0.000001,$^H = 1762;
0.000000,1,0.000000,${^WARNING_BITS} = "UUUUUUUUUUUUUUUUUUUU";
0.000003,1,0.000003,%^H = (
0.000000,0,0.000000,);
0.000035,1,0.000035,}
0.000000,0,0.000000,# END quote_sub PRELUDE
0.000015,29,0.000001,Carp::croak("_json_decoder is a read-only accessor") if @_ > 1;
0.000000,0,0.000000,exists $_[0]->{"_json_decoder"} ? 
0.000000,0,0.000000,$_[0]->{"_json_decoder"}
0.000118,29,0.000004,:    do {
0.000002,1,0.000002,my $value = $default_for__5fjson_5fdecoder->($_[0]);
0.000079,5,0.000016,do { no warnings "void"; package Type::Tiny; (( Scalar::Util::blessed($value) and not grep(!$value->can($_), qw/encode decode/) )) or Type::Tiny::_failed_check($isa_check_for__5fjson_5fdecoder, "HasMethods[\"encode\",\"decode\"]", $value, "attribute_name","_json_decoder","attribute_step","isa check","mgaca","0","varname","\$self->{\"_json_decoder\"}"); $value };
0.000004,1,0.000004,$_[0]->{"_json_decoder"} = $value
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000001,1,0.000001,$$_UNQUOTED = \&_json_decoder;
0.000000,0,0.000000,}
0.000004,1,0.000004,1;
0.000000,0,0.000000,
0.000000,0,0.000000,;
