# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package B::Hooks::EndOfScope::XS;
0.000000,0,0.000000,# ABSTRACT: Execute code after a scope finished compilation - XS implementation
0.000000,0,0.000000,
0.000020,2,0.000010,use strict;
0.000027,2,0.000014,use warnings;
0.000000,0,0.000000,
0.000000,1,0.000000,our $VERSION = '0.26';
0.000000,0,0.000000,
0.000000,0,0.000000,# Limit the V::M-based (XS) version to perl 5.8.4+
0.000000,0,0.000000,#
0.000000,0,0.000000,# Given the unorthodox stuff we do to work around the hinthash double-free
0.000000,0,0.000000,# might as well play it safe and only implement it in the PP version
0.000000,0,0.000000,# and leave it at that
0.000000,0,0.000000,# https://rt.perl.org/Public/Bug/Display.html?id=27040#txn-82797
0.000000,0,0.000000,#
0.000028,2,0.000014,use 5.008004;
0.000000,0,0.000000,
0.001030,3,0.000343,use Variable::Magic 0.48 ();
0.001068,1,0.001068,use Sub::Exporter::Progressive 0.001006 -setup => {
0.000000,0,0.000000,exports => ['on_scope_end'],
0.000000,0,0.000000,groups  => { default => ['on_scope_end'] },
0.000156,2,0.000078,};
0.000000,0,0.000000,
0.000000,0,0.000000,my $wiz = Variable::Magic::wizard
0.000036,18,0.000002,data => sub { [$_[1]] },
0.000146,36,0.000004,free => sub { $_->() for @{ $_[1] }; () },
0.000000,0,0.000000,# When someone localise %^H, our magic doesn't want to be copied
0.000000,0,0.000000,# down. We want it to be around only for the scope we've initially
0.000000,0,0.000000,# attached ourselves to. Merely having MGf_LOCAL and a noop svt_local
0.000000,0,0.000000,# callback achieves this. If anything wants to attach more magic of our
0.000000,0,0.000000,# kind to a localised %^H, things will continue to just work as we'll be
0.000000,0,0.000000,# attached with a new and empty callback list.
0.000005,1,0.000005,local => \undef
0.000000,0,0.000000,;
0.000000,0,0.000000,
0.000000,0,0.000000,sub on_scope_end (&) {
0.000020,18,0.000001,$^H |= 0x020000;
0.000000,0,0.000000,
0.000098,18,0.000005,if (my $stack = Variable::Magic::getdata %^H, $wiz) {
0.000000,0,0.000000,push @{ $stack }, $_[0];
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000109,18,0.000006,Variable::Magic::cast %^H, $wiz, $_[0];
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000004,1,0.000004,1;
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
