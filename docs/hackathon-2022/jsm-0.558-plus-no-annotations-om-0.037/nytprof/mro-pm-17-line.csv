# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,#      mro.pm
0.000000,0,0.000000,#
0.000000,0,0.000000,#      Copyright (c) 2007 Brandon L Black
0.000000,0,0.000000,#      Copyright (c) 2008,2009 Larry Wall and others
0.000000,0,0.000000,#
0.000000,0,0.000000,#      You may distribute under the terms of either the GNU General Public
0.000000,0,0.000000,#      License or the Artistic License, as specified in the README file.
0.000000,0,0.000000,#
0.000000,0,0.000000,package mro;
0.000032,2,0.000016,use strict;
0.000141,2,0.000070,use warnings;
0.000000,0,0.000000,
0.000000,0,0.000000,# mro.pm versions < 1.00 reserved for MRO::Compat
0.000000,0,0.000000,#  for partial back-compat to 5.[68].x
0.000001,1,0.000001,our $VERSION = '1.26';
0.000000,0,0.000000,
0.000000,1,0.000000,require XSLoader;
0.004307,1,0.004307,XSLoader::load('mro');
0.000000,0,0.000000,
0.000000,0,0.000000,sub import {
0.000003,1,0.000003,mro::set_mro(scalar(caller), $_[1]) if $_[1];
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,package # hide me from PAUSE
0.000000,0,0.000000,next;
0.000000,0,0.000000,
0.000000,0,0.000000,sub can { mro::_nextcan($_[0], 0) }
0.000000,0,0.000000,
0.000000,0,0.000000,sub method {
0.000000,0,0.000000,my $method = mro::_nextcan($_[0], 1);
0.000000,0,0.000000,goto &$method;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,package # hide me from PAUSE
0.000000,0,0.000000,maybe::next;
0.000000,0,0.000000,
0.000000,0,0.000000,sub method {
0.000000,0,0.000000,my $method = mro::_nextcan($_[0], 0);
0.000000,0,0.000000,goto &$method if defined $method;
0.000000,0,0.000000,return;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000006,1,0.000006,1;
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
