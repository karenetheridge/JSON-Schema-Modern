# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,# ABSTRACT: Reader class for YAML::PP representing input data
0.000020,2,0.000010,use strict;
0.000300,2,0.000150,use warnings;
0.000000,0,0.000000,package YAML::PP::Reader;
0.000000,0,0.000000,
0.000001,1,0.000001,our $VERSION = '0.035'; # VERSION
0.000000,0,0.000000,
0.000000,0,0.000000,sub input { return $_[0]->{input} }
0.000000,0,0.000000,sub set_input { $_[0]->{input} = $_[1] }
0.000000,0,0.000000,
0.000000,0,0.000000,sub new {
0.000002,2,0.000001,my ($class, %args) = @_;
0.000000,2,0.000000,my $input = delete $args{input};
0.000006,2,0.000003,return bless {
0.000000,0,0.000000,input => $input,
0.000000,0,0.000000,}, $class;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub read {
0.000000,0,0.000000,my ($self) = @_;
0.000000,0,0.000000,my $pos = pos $self->{input} || 0;
0.000000,0,0.000000,my $yaml = substr($self->{input}, $pos);
0.000000,0,0.000000,$self->{input} = '';
0.000000,0,0.000000,return $yaml;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub readline {
0.000000,0,0.000000,my ($self) = @_;
0.000000,0,0.000000,unless (length $self->{input}) {
0.000000,0,0.000000,return;
0.000000,0,0.000000,}
0.000000,0,0.000000,if ( $self->{input} =~ m/\G([^\r\n]*(?:\n|\r\n|\r|\z))/g ) {
0.000000,0,0.000000,my $line = $1;
0.000000,0,0.000000,unless (length $line) {
0.000000,0,0.000000,$self->{input} = '';
0.000000,0,0.000000,return;
0.000000,0,0.000000,}
0.000000,0,0.000000,return $line;
0.000000,0,0.000000,}
0.000000,0,0.000000,return;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,package YAML::PP::Reader::File;
0.000000,0,0.000000,
0.000026,2,0.000013,use Scalar::Util qw/ openhandle /;
0.000000,0,0.000000,
0.000006,1,0.000006,our @ISA = qw/ YAML::PP::Reader /;
0.000000,0,0.000000,
0.000156,2,0.000078,use Carp qw/ croak /;
0.000000,0,0.000000,
0.000000,0,0.000000,sub open_handle {
0.000006,1,0.000006,if (openhandle( $_[0]->{input} )) {
0.000000,0,0.000000,return $_[0]->{input};
0.000000,0,0.000000,}
0.000000,0,0.000000,open my $fh, '<:encoding(UTF-8)', $_[0]->{input}
0.000722,3,0.000241,or croak "Could not open '$_[0]->{input}' for reading: $!";
0.000005,1,0.000005,return $fh;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub read {
0.000000,0,0.000000,my $fh = $_[0]->{filehandle} ||= $_[0]->open_handle;
0.000000,0,0.000000,if (wantarray) {
0.000000,0,0.000000,my @yaml = <$fh>;
0.000000,0,0.000000,return @yaml;
0.000000,0,0.000000,}
0.000000,0,0.000000,else {
0.000000,0,0.000000,local $/;
0.000000,0,0.000000,my $yaml = <$fh>;
0.000000,0,0.000000,return $yaml;
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub readline {
0.003894,13361,0.000000,my $fh = $_[0]->{filehandle} ||= $_[0]->open_handle;
0.054726,13361,0.000004,return scalar <$fh>;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,1;
