# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,
0.000006,1,0.000006,require 5;
0.000000,0,0.000000,package Pod::Simple::LinkSection;
0.000000,0,0.000000,# Based somewhat dimly on Array::Autojoin
0.000000,0,0.000000,
0.000026,2,0.000013,use strict;
0.000519,2,0.000260,use Pod::Simple::BlackBox;
0.000033,2,0.000017,use vars qw($VERSION );
0.000000,1,0.000000,$VERSION = '3.43';
0.000000,0,0.000000,
0.000000,0,0.000000,use overload( # So it'll stringify nice
0.000000,1,0.000000,'""'   => \&Pod::Simple::BlackBox::stringify_lol,
0.000000,0,0.000000,'bool' => \&Pod::Simple::BlackBox::stringify_lol,
0.000000,0,0.000000,# '.='   => \&tack_on,  # grudgingly support
0.000000,0,0.000000,
0.000000,0,0.000000,'fallback' => 1,         # turn on cleverness
0.000200,1,0.000200,);
0.000000,0,0.000000,
0.000000,0,0.000000,sub tack_on {
0.000000,0,0.000000,$_[0] = ['', {}, "$_[0]" ];
0.000000,0,0.000000,return $_[0][2] .= $_[1];
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub as_string {
0.000000,0,0.000000,goto &Pod::Simple::BlackBox::stringify_lol;
0.000000,0,0.000000,}
0.000000,0,0.000000,sub stringify {
0.000000,0,0.000000,goto &Pod::Simple::BlackBox::stringify_lol;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub new {
0.000000,0,0.000000,my $class = shift;
0.000000,0,0.000000,$class = ref($class) || $class;
0.000000,0,0.000000,my $new;
0.000000,0,0.000000,if(@_ == 1) {
0.000000,0,0.000000,if (!ref($_[0] || '')) { # most common case: one bare string
0.000000,0,0.000000,return bless ['', {}, $_[0] ], $class;
0.000000,0,0.000000,} elsif( ref($_[0] || '') eq 'ARRAY') {
0.000000,0,0.000000,$new = [ @{ $_[0] } ];
0.000000,0,0.000000,} else {
0.000000,0,0.000000,Carp::croak( "$class new() doesn't know to clone $new" );
0.000000,0,0.000000,}
0.000000,0,0.000000,} else { # misc stuff
0.000000,0,0.000000,$new = [ '', {}, @_ ];
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,# By now it's a treelet:  [ 'foo', {}, ... ]
0.000000,0,0.000000,foreach my $x (@$new) {
0.000000,0,0.000000,if(ref($x || '') eq 'ARRAY') {
0.000000,0,0.000000,$x = $class->new($x); # recurse
0.000000,0,0.000000,} elsif(ref($x || '') eq 'HASH') {
0.000000,0,0.000000,$x = { %$x };
0.000000,0,0.000000,}
0.000000,0,0.000000,# otherwise leave it.
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,return bless $new, $class;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,# Not much in this class is likely to be link-section specific --
0.000000,0,0.000000,# but it just so happens that link-sections are about the only treelets
0.000000,0,0.000000,# that are exposed to the user.
0.000000,0,0.000000,
0.000003,1,0.000003,1;
0.000000,0,0.000000,
0.000000,0,0.000000,__END__
