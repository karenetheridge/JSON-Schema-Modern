# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,#
0.000000,0,0.000000,# Demand-load module list
0.000000,0,0.000000,#
0.000000,0,0.000000,package Encode::Config;
0.000159,3,0.000053,our $VERSION = do { my @r = ( q$Revision: 2.5 $ =~ /\d+/g ); sprintf "%d." . "%02d" x $#r, @r };
0.000000,0,0.000000,
0.000034,2,0.000017,use strict;
0.000371,2,0.000185,use warnings;
0.000000,0,0.000000,
0.000014,1,0.000014,our %ExtModule = (
0.000000,0,0.000000,
0.000000,0,0.000000,# Encode::Byte
0.000000,0,0.000000,#iso-8859-1 is in Encode.pm itself
0.000000,0,0.000000,'iso-8859-2'            => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-3'            => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-4'            => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-5'            => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-6'            => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-7'            => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-8'            => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-9'            => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-10'           => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-11'           => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-13'           => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-14'           => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-15'           => 'Encode::Byte',
0.000000,0,0.000000,'iso-8859-16'           => 'Encode::Byte',
0.000000,0,0.000000,'koi8-f'                => 'Encode::Byte',
0.000000,0,0.000000,'koi8-r'                => 'Encode::Byte',
0.000000,0,0.000000,'koi8-u'                => 'Encode::Byte',
0.000000,0,0.000000,'viscii'                => 'Encode::Byte',
0.000000,0,0.000000,'cp424'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp437'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp737'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp775'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp850'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp852'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp855'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp856'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp857'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp858'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp860'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp861'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp862'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp863'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp864'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp865'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp866'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp869'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp874'                 => 'Encode::Byte',
0.000000,0,0.000000,'cp1006'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1250'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1251'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1252'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1253'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1254'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1255'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1256'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1257'                => 'Encode::Byte',
0.000000,0,0.000000,'cp1258'                => 'Encode::Byte',
0.000000,0,0.000000,'AdobeStandardEncoding' => 'Encode::Byte',
0.000000,0,0.000000,'MacArabic'             => 'Encode::Byte',
0.000000,0,0.000000,'MacCentralEurRoman'    => 'Encode::Byte',
0.000000,0,0.000000,'MacCroatian'           => 'Encode::Byte',
0.000000,0,0.000000,'MacCyrillic'           => 'Encode::Byte',
0.000000,0,0.000000,'MacFarsi'              => 'Encode::Byte',
0.000000,0,0.000000,'MacGreek'              => 'Encode::Byte',
0.000000,0,0.000000,'MacHebrew'             => 'Encode::Byte',
0.000000,0,0.000000,'MacIcelandic'          => 'Encode::Byte',
0.000000,0,0.000000,'MacRoman'              => 'Encode::Byte',
0.000000,0,0.000000,'MacRomanian'           => 'Encode::Byte',
0.000000,0,0.000000,'MacRumanian'           => 'Encode::Byte',
0.000000,0,0.000000,'MacSami'               => 'Encode::Byte',
0.000000,0,0.000000,'MacThai'               => 'Encode::Byte',
0.000000,0,0.000000,'MacTurkish'            => 'Encode::Byte',
0.000000,0,0.000000,'MacUkrainian'          => 'Encode::Byte',
0.000000,0,0.000000,'nextstep'              => 'Encode::Byte',
0.000000,0,0.000000,'hp-roman8'             => 'Encode::Byte',
0.000000,0,0.000000,#'gsm0338'               => 'Encode::Byte',
0.000000,0,0.000000,'gsm0338'               => 'Encode::GSM0338',
0.000000,0,0.000000,
0.000000,0,0.000000,# Encode::EBCDIC
0.000000,0,0.000000,'cp37'     => 'Encode::EBCDIC',
0.000000,0,0.000000,'cp500'    => 'Encode::EBCDIC',
0.000000,0,0.000000,'cp875'    => 'Encode::EBCDIC',
0.000000,0,0.000000,'cp1026'   => 'Encode::EBCDIC',
0.000000,0,0.000000,'cp1047'   => 'Encode::EBCDIC',
0.000000,0,0.000000,'posix-bc' => 'Encode::EBCDIC',
0.000000,0,0.000000,
0.000000,0,0.000000,# Encode::Symbol
0.000000,0,0.000000,'dingbats'      => 'Encode::Symbol',
0.000000,0,0.000000,'symbol'        => 'Encode::Symbol',
0.000000,0,0.000000,'AdobeSymbol'   => 'Encode::Symbol',
0.000000,0,0.000000,'AdobeZdingbat' => 'Encode::Symbol',
0.000000,0,0.000000,'MacDingbats'   => 'Encode::Symbol',
0.000000,0,0.000000,'MacSymbol'     => 'Encode::Symbol',
0.000000,0,0.000000,
0.000000,0,0.000000,# Encode::Unicode
0.000000,0,0.000000,'UCS-2BE'  => 'Encode::Unicode',
0.000000,0,0.000000,'UCS-2LE'  => 'Encode::Unicode',
0.000000,0,0.000000,'UTF-16'   => 'Encode::Unicode',
0.000000,0,0.000000,'UTF-16BE' => 'Encode::Unicode',
0.000000,0,0.000000,'UTF-16LE' => 'Encode::Unicode',
0.000000,0,0.000000,'UTF-32'   => 'Encode::Unicode',
0.000000,0,0.000000,'UTF-32BE' => 'Encode::Unicode',
0.000000,0,0.000000,'UTF-32LE' => 'Encode::Unicode',
0.000000,0,0.000000,'UTF-7'    => 'Encode::Unicode::UTF7',
0.000000,0,0.000000,);
0.000000,0,0.000000,
0.000022,1,0.000022,unless ( ord("A") == 193 ) {
0.000000,0,0.000000,%ExtModule = (
0.000000,0,0.000000,%ExtModule,
0.000000,0,0.000000,'euc-cn'         => 'Encode::CN',
0.000000,0,0.000000,'gb12345-raw'    => 'Encode::CN',
0.000000,0,0.000000,'gb2312-raw'     => 'Encode::CN',
0.000000,0,0.000000,'hz'             => 'Encode::CN',
0.000000,0,0.000000,'iso-ir-165'     => 'Encode::CN',
0.000000,0,0.000000,'cp936'          => 'Encode::CN',
0.000000,0,0.000000,'MacChineseSimp' => 'Encode::CN',
0.000000,0,0.000000,
0.000000,0,0.000000,'7bit-jis'      => 'Encode::JP',
0.000000,0,0.000000,'euc-jp'        => 'Encode::JP',
0.000000,0,0.000000,'iso-2022-jp'   => 'Encode::JP',
0.000000,0,0.000000,'iso-2022-jp-1' => 'Encode::JP',
0.000000,0,0.000000,'jis0201-raw'   => 'Encode::JP',
0.000000,0,0.000000,'jis0208-raw'   => 'Encode::JP',
0.000000,0,0.000000,'jis0212-raw'   => 'Encode::JP',
0.000000,0,0.000000,'cp932'         => 'Encode::JP',
0.000000,0,0.000000,'MacJapanese'   => 'Encode::JP',
0.000000,0,0.000000,'shiftjis'      => 'Encode::JP',
0.000000,0,0.000000,
0.000000,0,0.000000,'euc-kr'      => 'Encode::KR',
0.000000,0,0.000000,'iso-2022-kr' => 'Encode::KR',
0.000000,0,0.000000,'johab'       => 'Encode::KR',
0.000000,0,0.000000,'ksc5601-raw' => 'Encode::KR',
0.000000,0,0.000000,'cp949'       => 'Encode::KR',
0.000000,0,0.000000,'MacKorean'   => 'Encode::KR',
0.000000,0,0.000000,
0.000000,0,0.000000,'big5-eten'      => 'Encode::TW',
0.000000,0,0.000000,'big5-hkscs'     => 'Encode::TW',
0.000000,0,0.000000,'cp950'          => 'Encode::TW',
0.000000,0,0.000000,'MacChineseTrad' => 'Encode::TW',
0.000000,0,0.000000,
0.000000,0,0.000000,#'big5plus'           => 'Encode::HanExtra',
0.000000,0,0.000000,#'euc-tw'             => 'Encode::HanExtra',
0.000000,0,0.000000,#'gb18030'            => 'Encode::HanExtra',
0.000000,0,0.000000,
0.000000,0,0.000000,'MIME-Header' => 'Encode::MIME::Header',
0.000000,0,0.000000,'MIME-B'      => 'Encode::MIME::Header',
0.000000,0,0.000000,'MIME-Q'      => 'Encode::MIME::Header',
0.000000,0,0.000000,
0.000000,0,0.000000,'MIME-Header-ISO_2022_JP' => 'Encode::MIME::Header::ISO_2022_JP',
0.000000,0,0.000000,);
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,#
0.000000,0,0.000000,# Why not export ? to keep ConfigLocal Happy!
0.000000,0,0.000000,#
0.000056,1,0.000056,while ( my ( $enc, $mod ) = each %ExtModule ) {
0.000000,0,0.000000,$Encode::ExtModule{$enc} = $mod;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000027,1,0.000027,1;
0.000000,0,0.000000,__END__
