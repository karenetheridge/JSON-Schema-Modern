# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000000,0,0.000000,package Moo::sification;
0.000022,2,0.000011,use strict;
0.000030,2,0.000015,use warnings;
0.000014,2,0.000007,no warnings 'once';
0.000000,0,0.000000,
0.000026,2,0.000013,use Carp qw(croak);
0.000022,1,0.000022,BEGIN { our @CARP_NOT = qw(Moo::HandleMoose) }
0.000129,2,0.000064,use Moo::_Utils qw(_in_global_destruction);
0.000000,0,0.000000,
0.000000,0,0.000000,sub unimport {
0.000000,0,0.000000,croak "Can't disable Moo::sification after inflation has been done"
0.000000,0,0.000000,if $Moo::HandleMoose::SETUP_DONE;
0.000000,0,0.000000,our $disabled = 1;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub Moo::HandleMoose::AuthorityHack::DESTROY {
0.000000,0,0.000000,unless (our $disabled or _in_global_destruction) {
0.000000,0,0.000000,require Moo::HandleMoose;
0.000000,0,0.000000,Moo::HandleMoose->import;
0.000000,0,0.000000,}
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000000,0,0.000000,sub import {
0.000000,0,0.000000,return
0.000013,2,0.000006,if our $setup_done;
0.000001,1,0.000001,if ($INC{"Moose.pm"}) {
0.000000,0,0.000000,require Moo::HandleMoose;
0.000000,0,0.000000,Moo::HandleMoose->import;
0.000000,0,0.000000,} else {
0.000002,1,0.000002,$Moose::AUTHORITY = bless({}, 'Moo::HandleMoose::AuthorityHack');
0.000000,0,0.000000,}
0.000003,1,0.000003,$setup_done = 1;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000003,1,0.000003,1;
