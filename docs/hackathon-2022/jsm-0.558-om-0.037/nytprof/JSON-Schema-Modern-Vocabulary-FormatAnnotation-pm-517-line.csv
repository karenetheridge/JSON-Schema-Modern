# Profile data generated by Devel::NYTProf::Reader
# Version: v6.12
# More information at http://metacpan.org/release/Devel-NYTProf/
# Format: time,calls,time/call,code
0.000028,2,0.000014,use strict;
0.000036,2,0.000018,use warnings;
0.000000,0,0.000000,package JSON::Schema::Modern::Vocabulary::FormatAnnotation;
0.000000,0,0.000000,# vim: set ts=8 sts=2 sw=2 tw=100 et :
0.000000,0,0.000000,# ABSTRACT: Implementation of the JSON Schema Format-Annotation vocabulary
0.000000,0,0.000000,
0.000001,1,0.000001,our $VERSION = '0.558';
0.000000,0,0.000000,
0.000027,2,0.000013,use 5.020;
0.000019,2,0.000010,use Moo;
0.000027,3,0.000009,use strictures 2;
0.000028,2,0.000014,use experimental qw(signatures postderef);
0.000022,2,0.000011,use if "$]" >= 5.022, experimental => 're_strict';
0.000018,2,0.000009,no if "$]" >= 5.031009, feature => 'indirect';
0.000022,2,0.000011,no if "$]" >= 5.033001, feature => 'multidimensional';
0.000015,2,0.000007,no if "$]" >= 5.033006, feature => 'bareword_filehandles';
0.000015,2,0.000008,use JSON::Schema::Modern::Utilities qw(is_type E A assert_keyword_type);
0.000011,2,0.000005,use Feature::Compat::Try;
0.000165,2,0.000082,use namespace::clean;
0.000000,0,0.000000,
0.000000,1,0.000000,with 'JSON::Schema::Modern::Vocabulary';
0.000000,0,0.000000,
0.000000,0,0.000000,sub vocabulary {
0.000003,1,0.000003,'https://json-schema.org/draft/2019-09/vocab/format' => 'draft2019-09',
0.000000,0,0.000000,'https://json-schema.org/draft/2020-12/vocab/format-annotation' => 'draft2020-12';
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000006,5,0.000001,sub evaluation_order { 3 }
0.000000,0,0.000000,
0.000000,0,0.000000,sub keywords {
0.000005,2,0.000002,qw(format);
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000040,200,0.000000,sub _traverse_keyword_format ($self, $schema, $state) {
0.000050,50,0.000001,return if not assert_keyword_type($state, $schema, 'string');
0.000076,50,0.000002,return 1;
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.003498,10835,0.000000,sub _eval_keyword_format ($self, $data, $schema, $state) {
0.028560,2167,0.000013,return A($state, $schema->{format});
0.000000,0,0.000000,}
0.000000,0,0.000000,
0.000004,1,0.000004,1;
0.000000,0,0.000000,
0.000013,1,0.000013,__END__
