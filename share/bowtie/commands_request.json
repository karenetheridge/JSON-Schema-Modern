{
  "$defs": {
    "start_request": {
      "description": "Sent once at program start to the implementation to indicate Bowtie is starting to send test cases.",
      "$id": "tag:bowtie.report,2023:ihop:command:start",
      "required": ["version"],
      "properties": {
        "cmd": { "const": "start" },
        "version": {
          "description": "The version of the Bowtie protocol which is intended.",
          "$ref": "tag:bowtie.report,2023:ihop#version"
        }
      }
    },
    "dialect_request": {
      "description": "Sent to indicate an 'implicit dialect' -- i.e. which dialect is intended for schemas which do not contain $schema. May be sent multiple times by bowtie to indicate a change in implicit dialect. Note that implementations do not have to support processing such schemas in certain versions of the JSON Schema specification. Harnesses should *not* attempt to pepper this behavior over, or otherwise change the behavior of an implementation. In other words, this value should *not* be used to mutate incoming schemas (by inserting $schema). If an implementation does not support indicating what dialect a schema is written against unless indicated by $schema, or if it refuses to process schemas which do not contain $schema entirely, it should respond to this command as indicated below, and simply error when running cases containing such schemas as it would when used normally. Regardless of the dialect specified by this request, *explicitly* dialected schemas (which do contain $schema) with a different dialect may still be sent (as long as the implementation has signalled it supports the dialect)!",
      "$id": "tag:bowtie.report,2023:ihop:command:dialect",
      "properties": {
        "cmd": { "const": "dialect" },
        "dialect": {
          "description": "A dialect URI which has previously been recognized as supported by the implementation's start response.",

          "type": "string",
          "format": "uri"
        }
      }
    },
    "stop_request": {
      "$comment": "???"
    },
    "dialect_request": {
      "description": "Sent to indicate an 'implicit dialect' -- i.e. which dialect is intended for schemas which do not contain $schema. May be sent multiple times by bowtie to indicate a change in implicit dialect. Note that implementations do not have to support processing such schemas in certain versions of the JSON Schema specification. Harnesses should *not* attempt to pepper this behavior over, or otherwise change the behavior of an implementation. In other words, this value should *not* be used to mutate incoming schemas (by inserting $schema). If an implementation does not support indicating what dialect a schema is written against unless indicated by $schema, or if it refuses to process schemas which do not contain $schema entirely, it should respond to this command as indicated below, and simply error when running cases containing such schemas as it would when used normally. Regardless of the dialect specified by this request, *explicitly* dialected schemas (which do contain $schema) with a different dialect may still be sent (as long as the implementation has signalled it supports the dialect)!",
      "$id": "tag:bowtie.report,2023:ihop:command:dialect",
      "properties": {
        "cmd": { "const": "dialect" },
        "dialect": {
          "description": "A dialect URI which has previously been recognized as supported by the implementation's start response.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "run_request": {
      "description": "Sent to implementations for each test case.",
      "$id": "tag:bowtie.report,2023:ihop:command:run",
      "required": ["seq", "case"],
      "properties": {
        "cmd": { "const": "run" },
        "seq": {
          "description": "A sequence identifier for the test case. It must be passed along as-is in the response.",
          "$anchor": "seq"
        },
        "case": { "$ref": "tag:bowtie.report,2023:ihop#case" }
      }
    }
  },
  "type": "object",
  "required": ["cmd"],
  "properties": {
    "cmd": {
      "enum": ["start", "stop", "dialect", "run"]
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "cmd": {
            "const": "start"
          }
        }
      },
      "then": {
        "$ref": "tag:bowtie.report,2023:ihop:command:start"
      }
    },
    {
      "if": {
        "properties": {
          "cmd": {
            "const": "dialect"
          }
        }
      },
      "then": {
        "$ref": "tag:bowtie.report,2023:ihop:command:dialect"
      }
    },
    {
      "if": {
        "properties": {
          "cmd": {
            "const": "run"
          }
        }
      },
      "then": {
        "$ref": "tag:bowtie.report,2023:ihop:command:run"
      }
    },
    {
      "if": {
        "properties": {
          "cmd": {
            "const": "stop"
          }
        }
      },
      "then": {
        "$ref": "tag:bowtie.report,2023:ihop:command:stop"
      }
    }
  ]
}
